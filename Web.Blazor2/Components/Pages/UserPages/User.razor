@page "/user"
@using Web.Blazor2.Dtos
@using Web.Blazor2.ServiceInterfaces
@inject IAuthService _authService;
@inject ITaskService _taskService;
@inject MudBlazor.ISnackbar snackBar

<MudCard Elevation="10">
    <MudGrid>
        <MudItem xs="4">
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h6">
                        Add / Edit
                    </MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent> 
                <MudTextField @bind-Value="dto.Login" Label="Login" Variant="Variant.Filled" Margin="Margin.Normal"></MudTextField>
                <MudTextField @bind-Value="dto.Password" Label="Password" Variant="Variant.Filled" Margin="Margin.Normal"></MudTextField>
                <br \>
                <MudButton Variant="Variant.Filled" @onclick="LogIn">Mutq</MudButton>
            </MudCardContent>
        </MudItem>
    </MudGrid>
</MudCard>


<br \>
<button class="btn btn-danger" @onclick="() => TestAuthorize()">TestAuthorize</button>
<p>@chelav</p>
<br \>


<p>@reg</p>
<br \>


<a class="btn btn-warning" href="/tasks">Tasks</a>



@code {

    private UserInsertDto dto = new();

    private string chelav = " ";
    private string reg = "Reg";
    private string searchString="";

    private async Task LogIn()
    {
        try
        {
            var result = await _authService.Login(dto.Login, dto.Password);

        }
        catch (Exception ex)
        {

            Console.WriteLine($"exception: {ex.Message}");
        }

    }

    private async Task TestAuthorize()
    {
        var result = await _authService.AuthorizeTest();
        if (result)
        {
            chelav = "elav";
        }
        else
        {
            chelav = "chelav";
        }

    }

    private async Task Register()
    {
        try
        {
            var result = await _authService.Register(dto.Login, dto.Password);
            // Console.WriteLine(result);
            if (result)
            {
                reg = "regelav";
            }
            else
            {
                reg = "user is already registered";
            }
        }
        catch (Exception ex)
        {

            Console.WriteLine($"exception: {ex.Message}");
        }

    }

    private bool Search(TaskDto taskDto)
    {
        return false;
    }

    public class UserInsertDto
    {
        public string Login { get; set; }
        public string Password { get; set; }
    }
} 