@page "/task"
@using System.Net.Http.Headers
@using System.Text.Json
@using Web.Blazor1.ServiceInterfaces

@inject ITaskService _taskService;
@inject IAuthService _authService;
@inject NavigationManager NavigationManager
@rendermode InteractiveServer //???

<a class="btn btn-primary mb-2" href="/createProduct">Create New Product</a>

<table class="table table-bordered">
    <thead>
        <tr>
            <th>Title</th>
            <th>Description</th>
            <th>State</th>
            <th>IsCompleted</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var product in dtos)
        {
            <tr>
                <td>@product.Title</td>
                <td>@product.Description</td>
                <td>@product.State</td>
                <td>@product.IsCompleted</td>
                <td>
                    <a class="btn btn-warning" href="/updateProduct/@product.Id">Edit</a>
                    @* <button class="btn btn-danger" @onclick="() => Delete(product.Id)">Delete</button> *@
                </td>
            </tr>
        }
    </tbody>
</table>


@code {

    private List<TaskDto> dtos = new();
    private string errorMessage;

    // protected override async Task OnInitializedAsync()
    // {
    //     dtos = await _taskService.GetAllTasks();
    // }

    public class TaskDto
    {
        public int Id { get; set; }
        public string Title { get; set; }
        public string Description { get; set; }
        public StateEnum State { get; set; }
        public bool IsCompleted { get; set; }
        public int UserId { get; set; }
    }

    public enum StateEnum
    {
        None = 1,
        InProcess = 2,
        Done = 3,
    }

}















